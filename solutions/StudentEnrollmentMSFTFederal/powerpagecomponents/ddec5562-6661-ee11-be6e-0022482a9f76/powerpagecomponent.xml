<powerpagecomponent powerpagecomponentid="ddec5562-6661-ee11-be6e-0022482a9f76">
  <content>{
  "source": "&lt;!-- Get instructors --&gt;\r\n{% fetchxml role %}\r\n&lt;fetch&gt;\r\n  &lt;entity name=\"adx_webrole\" &gt;\r\n    &lt;attribute name=\"adx_webroleid\" /&gt;\r\n    &lt;filter&gt;\r\n      &lt;condition attribute=\"adx_name\" operator=\"eq\" value=\"C1 ASP\" /&gt;\r\n    &lt;/filter&gt;\r\n  &lt;/entity&gt;\r\n&lt;/fetch&gt;\r\n{% endfetchxml %}\r\n{% fetchxml instructors %}\r\n&lt;fetch&gt;\r\n    &lt;entity name=\"contact\"&gt;\r\n        &lt;attribute name=\"fullname\" /&gt;\r\n        &lt;attribute name=\"contactid\" /&gt;\r\n        &lt;filter&gt;\r\n            &lt;condition entityname=\"adx_webrole_contact\" attribute=\"adx_webroleid\" operator=\"eq\"\r\n                value=\"{{role.results.entities[0].adx_webroleid}}\" /&gt;\r\n        &lt;/filter&gt;\r\n        &lt;link-entity name=\"adx_webrole_contact\" from=\"contactid\" to=\"contactid\" link-type=\"inner\" intersect=\"true\"\r\n            visible=\"true\" /&gt;\r\n    &lt;/entity&gt;\r\n&lt;/fetch&gt;\r\n{% endfetchxml %}\r\n\r\n&lt;script&gt;\r\n//Save the instructors in an array to use on the webpage's JS\r\nvar instructorsArr = [];\r\n{% if instructors.results.entities %}\r\n{%for instructor in instructors.results.entities %}\r\n instructorsArr.push({id: \"{{instructor.contactid}}\", name: \"{{instructor.fullname}}\"});\r\n{% endfor %}\r\n{% endif %}\r\n\r\nvar documentbodyContents;\r\nvar selectedDays = [];\r\nvar isRecurrent = false;\r\n\r\n//File upload function called by the PCF\r\nwindow.uploadImagePCF = function (name, memetype, body) {\r\n    courseImageType = memetype;\r\n    courseImageName = name;\r\n    documentbodyContents = body.substring(body.indexOf(',') + 1);           \r\n}\r\n\r\n\r\n\r\n$(function () {\r\n    const oob_instructor = $(\"#msdynce_instructorname\");\r\n    const oob_deadline = $(\"#msdynce_registerationdeadline\");\r\n    const oob_startdatetime = $(\"#msdynce_coursestartdateandtime_datepicker_description\");\r\n    const oob_enddatetime = $(\"#msdynce_courseenddateandtime_datepicker_description\");\r\n    const oob_frequency = $(\"#msdynce_frequency\");\r\n    const oob_days = $(\"#msdynce_coursedays_Container\");\r\n    const oob_createBtn = $(\"#InsertButton\");\r\n    const oob_description = $(\"#msdynce_coursedescription\");\r\n    const oob_coursename = $(\"#msdynce_coursename\");\r\n    const oob_format = $(\"#msdynce_coursetype_Container\");\r\n    const oob_grade = $(\"#msdynce_coursegradelevel_Container\");\r\n    const oob_category = $(\"#msdynce_coursecategory\");\r\n    const oob_capacity = $(\"#msdynce_registerationmaxcapacity\");\r\n\r\n    //Insert needed fields\r\n    oob_instructor.parent().parent().after('&lt;span class=\"icon-image\" id=\"instructoricon\"&gt;&lt;img src=\"/instructor-icon.svg\" alt=\"instructor name icon\"&gt;&lt;/span&gt;' +\r\n        '&lt;select class=\"form-control\" id=\"instructorname\" aria-label=\"{{snippets[\\'Course/Instructor\\']}}\"' +\r\n        'aria-label=\"Instructor\"&gt;' +\r\n        '&lt;option value=\"\"&gt;&lt;/option&gt;' +\r\n        '&lt;/select&gt;');\r\n    oob_deadline.parent().after('&lt;span class=\"icon-image\" id=\"deadlineicon\"&gt;&lt;img src=\"/deadline-icon.svg\" alt=\"deadline icon\"&gt;&lt;/span&gt;' +\r\n        '&lt;input id=\"deadline\" class=\"form-control\" type=\"date\" placeholder=\"{{snippets[\\'Course/RegistrationDeadline\\']}}\"' +\r\n        'aria-label=\"{{snippets[\\'Course/RegistrationDeadline\\']}}\"&gt;');\r\n    oob_startdatetime.parent().after('&lt;span class=\"icon-image\"&gt;&lt;img src=\"/date-icon.svg\" alt=\"date icon\"&gt;&lt;/span&gt;' +\r\n        '&lt;input id=\"startdate\" class=\"form-control\" type=\"date\" aria-label=\"{{snippets[\\'Course/StartDate\\']}}\"' +\r\n        'aria-required=\"true\"&gt;');\r\n    oob_enddatetime.parent().after('&lt;span class=\"icon-image to-separator\"&gt;to&lt;/span&gt;' +\r\n        '&lt;input id=\"enddate\" class=\"form-control\" type=\"date\" aria-label=\"{{snippets[\\'Course/EndDate\\']}}\"' +\r\n        'aria-required=\"true\"&gt;');\r\n    oob_frequency.parent().after('&lt;label class=\"checkbox-container\"&gt;' +\r\n        '&lt;input type=\"checkbox\" id=\"frequency\" name=\"One-time event\" aria-label=\"{{snippets[\\'Course/OneTimeEvent\\']}}\"&gt;' +\r\n        '&lt;span class=\"checkmark\"&gt;&lt;/span&gt;' +\r\n        '&lt;label for=\"frequency\"&gt;{{snippets[\\'Course/OneTimeEvent\\']}}&lt;/label&gt;' +\r\n        '&lt;/label&gt;');\r\n    oob_days.parent().parent().after('&lt;span class=\"icon-image\" id=\"dayicon\"&gt;&lt;img src=\"/date-icon.svg\" alt=\"date icon\"&gt;&lt;/span&gt;&lt;div class=\"day-container\"&gt;&lt;/div&gt;');\r\n\r\n\r\n    //Insert one more row after date fields for time fields\r\n    oob_startdatetime.parent().parent().parent().parent().after('&lt;tr&gt;' +\r\n        '&lt;td colspan=\"1\" rowspan=\"1\" class=\"clearfix cell datetime form-control-cell\"&gt;' +\r\n        '&lt;span class=\"icon-image\" id=\"starttimeicon\"&gt;&lt;img src=\"/time-icon.svg\" alt=\"time icon\"&gt;&lt;/span&gt;' +\r\n        '&lt;input type=\"time\" id=\"starttime\" class=\"form-control\" name=\"starttime\" aria-label=\"{{snippets[\\'Course/StartTime\\']}}\"' +\r\n        'aria-required=\"true\" required /&gt;' +\r\n        '&lt;/td&gt;' +\r\n        '&lt;td colspan=\"1\" rowspan=\"1\" class=\"clearfix cell datetime form-control-cell\"&gt;' +\r\n        '&lt;span class=\"icon-image to-separator\" id=\"endtimeto\"&gt;{{snippets[\\'To\\']}}&lt;/span&gt;' +\r\n        '&lt;input type=\"time\" id=\"endtime\" class=\"form-control\" name=\"endtime\" aria-label=\"{{snippets[\\'Course/EndTime\\']}}\"' +\r\n        'aria-required=\"true\" required /&gt;' +\r\n        '&lt;/td&gt;' +\r\n        '&lt;/tr&gt;');\r\n\r\n\r\n    //Insert character count for the description\r\n    oob_description.after('&lt;div id=\"characterCount\"&gt;0 / 1000&lt;/div&gt;');\r\n    oob_description.attr('maxlength', 1000);\r\n\r\n    //Insert field icons\r\n    oob_coursename.before('&lt;span class=\"icon-image\"&gt;&lt;img src=\"/name-icon.svg\" alt=\"class name icon\"&gt;&lt;/span&gt;');\r\n    oob_format.parent().before('&lt;span class=\"icon-image\"&gt;&lt;img src=\"/format-icon.svg\" alt=\"format icon\"&gt;&lt;/span&gt;');\r\n    oob_grade.parent().before('&lt;span class=\"icon-image\"&gt;&lt;img src=\"/grade-icon.svg\" alt=\"grade icon\"&gt;&lt;/span&gt;');\r\n    oob_description.before('&lt;span class=\"icon-image textarea-icon\"&gt;&lt;img src=\"/description-icon.svg\" alt=\"description icon\"&gt;&lt;/span&gt;');\r\n    oob_category.before('&lt;span class=\"icon-image\"&gt;&lt;img src=\"/category-icon.svg\" alt=\"category icon\"&gt;&lt;/span&gt;');\r\n    oob_capacity.before('&lt;span class=\"icon-image\"&gt;&lt;img src=\"/capacity-icon.svg\" alt=\"max capacity icon\"&gt;&lt;/span&gt;');\r\n\r\n    //Hide fields\r\n    oob_frequency.parent().hide();\r\n    oob_instructor.parent().parent().hide();\r\n    oob_deadline.parent().hide();\r\n    oob_startdatetime.parent().hide();\r\n    oob_enddatetime.parent().hide();\r\n    oob_days.parent().parent().hide();\r\n    oob_createBtn.remove();\r\n\r\n    //Populate instructor dropdown\r\n    const instructorDropdown = $(\"#instructorname\");\r\n    instructorsArr.forEach(function (element, index, array) {\r\n        instructorDropdown.append('&lt;option value=\"' + element.id + '\"&gt;' + element.name + '&lt;/option&gt;');\r\n    });\r\n\r\n    {% if request.path contains 'create' %}\r\n    //On the create page, set the instructor to the current user\r\n    instructorDropdown.val(\"{{ user.contactid }}\");\r\n    {% endif %}\r\n\r\n    //Populate days field\r\n    const daysContainer = $(\".day-container\");\r\n    $(\"#msdynce_coursedays_Container .msos-option .msos-checkbox\").each(function (index) {\r\n        if (index &gt; 0) {\r\n            daysContainer.append('&lt;span class=\"day-of-week\"&gt;' +\r\n                '&lt;input type=\"checkbox\" id=\"' + this.parentElement.title + '\" name=\"' + this.parentElement.title + '\"' +\r\n                'value=\"' + this.value + '\" aria-label=\"' + this.parentElement.title + '\"&gt;' +\r\n                '&lt;label for=\"' + this.parentElement.title + '\"&gt;' + this.parentElement.title + '&lt;/label&gt;' +\r\n                '&lt;/span&gt;');\r\n        }\r\n    });\r\n\r\n    //Add needed container for styling\r\n    $('#instructorname, #instructoricon').wrapAll('&lt;div class=\"flex-control\"&gt;');\r\n    $('#deadline, #deadlineicon').wrapAll('&lt;div class=\"flex-control\"&gt;');\r\n    $('#endtime, #endtimeto').wrapAll('&lt;div class=\"flex-control\"&gt;');\r\n    $('#starttime, #starttimeicon').wrapAll('&lt;div class=\"flex-control\"&gt;');\r\n    $('.day-container, #dayicon').wrapAll('&lt;div class=\"flex-control\"&gt;');\r\n    $('#msdynce_coursedescription, .textarea-icon').wrapAll('&lt;div class=\"flex-control\"&gt;');\r\n\r\n    addPlaceholders();\r\n\r\n    //Disable days of week control if frequency is set to one-time\r\n    if (document.getElementById(\"frequency\").checked) {\r\n        isRecurrent = false;\r\n        //Disable end date\r\n        document.getElementById(\"enddate\").disabled = true;\r\n    } else isRecurrent = true;\r\n\r\n    //Update character count for description\r\n    const characterCount = $(\"#characterCount\");\r\n    oob_description.on(\"input\", function () {\r\n        const maxLength = this.getAttribute(\"maxlength\");\r\n        const currentLength = this.value.length;\r\n        characterCount.text(currentLength + \" / \" + maxLength);\r\n    });\r\n\r\n    //Select days of week logic\r\n    $(\".day-of-week label\").on(\"click\", function () {\r\n        if (isRecurrent)\r\n            $(this).toggleClass(\"selected\");\r\n        else {\r\n            $(\".day-of-week label\").each(function () {\r\n                //Remove selected appearence from all other days\r\n                $(this).removeClass(\"selected\");\r\n            });\r\n            //Select selected day\r\n            $(this).addClass(\"selected\");\r\n        }\r\n    });\r\n\r\n    $(\".day-of-week input[type='checkbox']\").on(\"change\", function () {\r\n        if (this.checked) {\r\n            if (!isRecurrent) {\r\n                $(\".day-of-week input[type='checkbox']\").each(function () {\r\n                    this.checked = false;\r\n                    $(this.nextElementSibling).removeClass(\"selected\");\r\n                });\r\n                selectedDays = [];\r\n                this.checked = true;\r\n            }\r\n            $(this.nextElementSibling).addClass(\"selected\");\r\n            selectedDays.push(this.value);\r\n        } else {\r\n            $(this.nextElementSibling).removeClass(\"selected\");\r\n            const pos = selectedDays.indexOf(this.value);\r\n            selectedDays.splice(pos, 1);\r\n        }\r\n\r\n    });\r\n\r\n    //Change the control depending on the frequency selected\r\n    let startDateInput = document.getElementById(\"startdate\");\r\n    let endDateInput = document.getElementById(\"enddate\");\r\n    $(\"#frequency\").on(\"change\", function () {\r\n        let daysCheckboxes = document.getElementsByClassName(\"day-of-week\");\r\n        if (this.checked) {\r\n            isRecurrent = false;\r\n            //Set end date the same as start date\r\n            endDateInput.value = document.getElementById(\"startdate\").value;\r\n            endDateInput.disabled = true;\r\n            //Clear days selected\r\n            for (let i = 0; i &lt; daysCheckboxes.length; i++) {\r\n                daysCheckboxes[i].children[0].checked = false;\r\n                //Empty the selected days array in case any days had been selected\r\n                selectedDays = [];\r\n                $(daysCheckboxes[i].children[1]).removeClass(\"selected\");\r\n            }\r\n        } else {\r\n            isRecurrent = true;\r\n            //Enable end date\r\n            endDateInput.disabled = false;\r\n        }\r\n    });\r\n\r\n    //Change end date as start date if frequency = one-time\r\n    $(\"#startdate\").on(\"change\", function () {\r\n        if (!isRecurrent) {\r\n            endDateInput.value = startDateInput.value;\r\n        }\r\n    });\r\n\r\n    //Prever discard changes button from redirecting\r\n    $('#cancelButton').on(\"click\", function (e) {\r\n        e.preventDefault();\r\n    });\r\n\r\n    $('#cancelButton1').on(\"click\", function (e) {\r\n        e.preventDefault();\r\n    });\r\n});\r\n\r\nfunction addPlaceholders() {\r\n    $(\".crmEntityFormView .cell .field-label\").hide();\r\n    $(\"#msdynce_coursename\").attr(\"placeholder\", \"{{snippets['Course/CourseName'] }}\");\r\n    $(\"#instructorname\").attr(\"placeholder\", \"{{snippets['Course/InstructorName'] }}\");\r\n    $(\"#msdynce_coursedescription\").attr(\"placeholder\", \"{{snippets['Course/EnterDescription'] }}\");\r\n    $(\"#msdynce_registerationmaxcapacity\").attr(\"placeholder\", \"{{snippets['Course/MaxCapacity'] }}\");\r\n    $(\"#msdynce_coursecategory\").attr(\"placeholder\", \"{{snippets['Filter/Category'] }}\");\r\n    $(\"#msdynce_coursetype_Container #value_ledit\").attr(\"placeholder\", \"{{snippets['Format'] }}\");\r\n    $(\"#msdynce_coursedays_Container #value_ledit\").attr(\"placeholder\", \"{{snippets['Days'] }}\");\r\n    $(\"#msdynce_coursegradelevel_Container #value_ledit\").attr(\"placeholder\", \"{{snippets['Filter/Level'] }}\");\r\n}\r\n\r\n//Function to pass arrays into a string\r\nfunction arrayToString(arrayVar) {\r\n    let stringVar = \"\";\r\n    arrayVar.forEach(function (element, i, array) {\r\n        let auxString = arrayVar[i].toString();\r\n        if (i == 0)\r\n            stringVar = auxString;\r\n        else\r\n            stringVar = stringVar + \", \" + auxString;\r\n    });\r\n    //If nothing was selected, set the variable to null or the API will throw an error\r\n    if (stringVar == \"\")\r\n        stringVar = null;\r\n\r\n    return stringVar;\r\n}\r\n\r\n//Function to create date time value with moment.js\r\nfunction createDatetTimeValue(date, time) {\r\n    let final = null;\r\n    if (date &amp;&amp; time)\r\n        final = moment(date.toString() + \" \" + time.toString());\r\n\r\n    return final;\r\n}\r\n\r\nfunction fieldValidations() {\r\n    //get all fields    \r\n    var errorMessages = [];\r\n    const deadline = $(\"#deadline\");\r\n    const formatElement = $(\"#msdynce_coursetype\");\r\n    const oob_description = $(\"#msdynce_coursedescription\");\r\n    const oob_coursename = $(\"#msdynce_coursename\");\r\n    const oob_category = $(\"#msdynce_coursecategory\");\r\n    const oob_capacity = $(\"#msdynce_registerationmaxcapacity\");\r\n    const oob_format = $(\"#msdynce_coursetype\");\r\n    const gradeElement = $(\"#msdynce_coursegradelevel\");\r\n    let startdate = document.getElementById(\"startdate\").value;\r\n    let enddate = document.getElementById(\"enddate\").value;\r\n    let starttime = moment(document.getElementById(\"starttime\").value, 'HH:mm');\r\n    let endtime = moment(document.getElementById(\"endtime\").value, 'HH:mm');\r\n\r\n    //Remove any alerts\r\n    $(\".alert-danger\").remove();\r\n\r\n     //Check Start date in the future\r\n    if (moment(startdate).isBefore(new Date().toDateString()))\r\n        errorMessages.push(\"{{ settings['ASP/Course/Form/Validation/Field/StartDateInFuture'] }}\")\r\n\r\n    //Check End date isn't before Start date\r\n    if (moment(enddate).isBefore(startdate))\r\n        errorMessages.push(\"{{ settings['ASP/Course/Form/Validation/Field/EndDateBeforeStartDate'] }}\")\r\n\r\n    //Check End time isn't before Start time\r\n    if (moment(endtime).isBefore(starttime))\r\n        errorMessages.push(\"{{ settings['ASP/Course/Form/Validation/Field/EndTimeBeforeStartTime'] }}\")\r\n\r\n    //Check if capacity is set to more than 1\r\n    if (oob_capacity.val() &lt;= 1)\r\n        errorMessages.push(\"{{ settings['ASP/Course/Form/Validation/Field/MaxCapacityLow'] }}\")\r\n\r\n    //Check if capacity is set to more than 1\r\n    if (oob_capacity.val() % 1 != 0)\r\n        errorMessages.push(\"{{ settings['ASP/Course/Form/Validation/Field/MaxCapacityNumber'] }}\")\r\n\r\n    //Check if description passed the character limit\r\n    if (oob_description.val().length &gt; 1000)\r\n        errorMessages.push(\"{{ settings['ASP/Course/Form/Validation/Field/DescriptionToLong'] }}\")\r\n\r\n    //Put the values of the selected types in a string\r\n    let typeValues = Array.parse(formatElement.val())?.map(obj =&gt; {\r\n        return obj.Value\r\n    }).toString();\r\n\r\n    //Put the values of the selected days of the week in a string\r\n    let daysString = arrayToString(selectedDays);\r\n\r\n    //Put the values of the grades in a string\r\n    let gradeValues = Array.parse(gradeElement.val())?.map(obj =&gt; {\r\n        return obj.Value\r\n    }).toString();\r\n\r\n    //Check if required fields are filled\r\n    if (!oob_coursename.val() || !oob_category.val() || !oob_capacity.val() ||\r\n        !startdate || !starttime || !oob_format.val() || oob_format.val() == \"[]\" ||\r\n        !enddate || !endtime || !deadline.val() || !typeValues || !daysString || !gradeValues) {\r\n\r\n        let requiredMsg = \"{{ settings['ASP/Course/Form/Validation/Field/Required'] }}\" + \" \";\r\n        let missingFields = [];\r\n\r\n        if (!oob_coursename.val())\r\n            missingFields.push(\"{{ settings['ASP/Course/Form/Validation/Field/ClassName'] }}\");\r\n\r\n        if (!startdate)\r\n            missingFields.push(\"{{ settings['ASP/Course/Form/Validation/Field/StartDate'] }}\");\r\n\r\n        if (!enddate)\r\n            missingFields.push(\"{{ settings['ASP/Course/Form/Validation/Field/EndDate'] }}\");\r\n\r\n        if (!starttime || !starttime.isValid())\r\n            missingFields.push(\"{{ settings['ASP/Course/Form/Validation/Field/StartTime'] }}\");\r\n\r\n        if (!endtime || !endtime.isValid())\r\n            missingFields.push(\"{{ settings['ASP/Course/Form/Validation/Field/EndTime'] }}\");\r\n\r\n        if (!oob_category.val())\r\n            missingFields.push(\"{{ settings['ASP/Course/Form/Validation/Field/Category'] }}\");\r\n\r\n        if (!oob_capacity.val())\r\n            missingFields.push(\"{{ settings['ASP/Course/Form/Validation/Field/MaxCapacity'] }}\");\r\n\r\n        if (!deadline.val())\r\n            missingFields.push(\"{{ settings['ASP/Course/Form/Validation/Field/Deadline'] }}\");\r\n\r\n        if (!typeValues)\r\n            missingFields.push(\"{{ settings['ASP/Course/Form/Validation/Field/Format'] }}\");\r\n\r\n        if (!daysString)\r\n            missingFields.push(\"{{ settings['ASP/Course/Form/Validation/Field/Days'] }}\");\r\n\r\n        if (!gradeValues)\r\n            missingFields.push(\"{{ settings['ASP/Course/Form/Validation/Field/Level'] }}\");\r\n\r\n        missingFields.forEach(function (element, i, array) {\r\n            if (i == (array.length - 1))\r\n                requiredMsg = requiredMsg + element;\r\n            else\r\n                requiredMsg = requiredMsg + element + \", \";\r\n        });\r\n\r\n        errorMessages.push(requiredMsg);\r\n    }\r\n\r\n    if (errorMessages.length &gt; 0) {\r\n        const errorTag = `{{snippets[\"ASP/Error/CourseForm/Validation\"] }}`;\r\n        $(\".entity-form\").before(errorTag)\r\n        errorMessages.forEach(function (element, i, array) {\r\n            $(\".alert-danger\").append(\"• \" + element + \"&lt;br&gt;\");\r\n        });\r\n    }\r\n\r\n    return errorMessages;\r\n}\r\n\r\n&lt;/script&gt;"
}</content>
  <iscustomizable>1</iscustomizable>
  <name>Course Form Logic</name>
  <powerpagecomponenttype>8</powerpagecomponenttype>
  <powerpagesiteid>
    <powerpagesiteid>d8ec5562-6661-ee11-be6e-0022482a9f76</powerpagesiteid>
  </powerpagesiteid>
  <statecode>0</statecode>
  <statuscode>1</statuscode>
</powerpagecomponent>